name: Automated Market Scripts

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-market-script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Pull latest state file from repo
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin ${{ github.ref_name }}
      - name: Install dependencies
        run: npm install
      - name: Determine session and run script
        env:
          FMP_API_KEY: ${{ secrets.FMP_API_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # Get current UTC hour and minute
          hour=$(date -u +"%H")
          minute=$(date -u +"%M")
          total_minutes=$(( 10#$hour * 60 + 10#$minute ))

          # Block anything outside of 11:45 to 23:30 UTC
          allowed_start=$((11 * 60 + 45))   # 11:45 UTC = 705
          allowed_end=$((23 * 60 + 30))     # 23:30 UTC = 1410

          if [ "$total_minutes" -lt "$allowed_start" ] || [ "$total_minutes" -gt "$allowed_end" ]; then
            echo "Outside 11:45â€“23:30 UTC. Skipping run."
            exit 0
          fi

          # Define session boundaries in minutes since midnight UTC
          premarket_start=$((11 * 60 + 45))   # 11:45 UTC
          premarket_end=$((13 * 60 + 29))     # 13:29 UTC
          open_start=$((13 * 60 + 30))        # 13:30 UTC
          open_end=$((20 * 60 + 59))          # 20:59 UTC
          afterhours_start=$((21 * 60))       # 21:00 UTC
          afterhours_end=$((23 * 60 + 30))    # 23:30 UTC

          if [ "$total_minutes" -ge "$premarket_start" ] && [ "$total_minutes" -le "$premarket_end" ]; then
            arg="premarket"
          elif [ "$total_minutes" -ge "$open_start" ] && [ "$total_minutes" -le "$open_end" ]; then
            arg="open"
          elif [ "$total_minutes" -ge "$afterhours_start" ] && [ "$total_minutes" -le "$afterhours_end" ]; then
            arg="afterhours"
          else
            echo "Not in a valid session window for script execution."
            exit 0
          fi

          echo "Running: node lib/fmpTopGainers.js $arg"
          node lib/fmpTopGainers.js $arg
      - name: Commit and push updated state file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add lib/lastGainers_*.json || true
          if git diff --cached --quiet; then
            echo "No state changes to commit."
          else
            git commit -m "chore: update last gainers state [skip ci]" || true
            git push origin ${{ github.ref_name }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
